/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-08-12 07:02:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Raleway\" rel=\"stylesheet\">\n");
      out.write("<style>\n");
      out.write("* {\n");
      out.write("  box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("  background-color: #f1f1f1;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#regForm {\n");
      out.write("  background-color: #ffffff;\n");
      out.write("  margin: 100px auto;\n");
      out.write("  font-family: Raleway;\n");
      out.write("  padding: 40px;\n");
      out.write("  width: 70%;\n");
      out.write("  min-width: 300px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h1 {\n");
      out.write("  text-align: center;  \n");
      out.write("}\n");
      out.write("\n");
      out.write("input {\n");
      out.write("  padding: 10px;\n");
      out.write("  width: 100%;\n");
      out.write("  font-size: 17px;\n");
      out.write("  font-family: Raleway;\n");
      out.write("  border: 1px solid #aaaaaa;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Mark input boxes that gets an error on validation: */\n");
      out.write("input.invalid {\n");
      out.write("  background-color: #ffdddd;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Hide all steps by default: */\n");
      out.write(".tab {\n");
      out.write("  display: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button {\n");
      out.write("  background-color: #4CAF50;\n");
      out.write("  color: #ffffff;\n");
      out.write("  border: none;\n");
      out.write("  padding: 10px 20px;\n");
      out.write("  font-size: 17px;\n");
      out.write("  font-family: Raleway;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:hover {\n");
      out.write("  opacity: 0.8;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#prevBtn {\n");
      out.write("  background-color: #bbbbbb;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Make circles that indicate the steps of the form: */\n");
      out.write(".step {\n");
      out.write("  height: 15px;\n");
      out.write("  width: 15px;\n");
      out.write("  margin: 0 2px;\n");
      out.write("  background-color: #bbbbbb;\n");
      out.write("  border: none;  \n");
      out.write("  border-radius: 50%;\n");
      out.write("  display: inline-block;\n");
      out.write("  opacity: 0.5;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".step.active {\n");
      out.write("  opacity: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Mark the steps that are finished and valid: */\n");
      out.write(".step.finish {\n");
      out.write("  background-color: #4CAF50;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<body>\n");
      out.write("<h1><u>The application Version v24 created to understand CICD</u></h1>\n");
      out.write("<form id=\"regForm\" action=\"/action_page.php\">\n");
      out.write("  <h1>SignUp:</h1>\n");
      out.write("  <!-- One \"tab\" for each step in the form: -->\n");
      out.write("  <div class=\"tab\">Name:\n");
      out.write("    <p><input placeholder=\"First name...\" oninput=\"this.className = ''\" name=\"fname\"></p>\n");
      out.write("    <p><input placeholder=\"Last name...\" oninput=\"this.className = ''\" name=\"lname\"></p>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"tab\">Contact Info:\n");
      out.write("    <p><input placeholder=\"E-mail...\" oninput=\"this.className = ''\" name=\"email\"></p>\n");
      out.write("    <p><input placeholder=\"Phone...\" oninput=\"this.className = ''\" name=\"phone\"></p>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"tab\">Birthday:\n");
      out.write("    <p><input placeholder=\"dd\" oninput=\"this.className = ''\" name=\"dd\"></p>\n");
      out.write("    <p><input placeholder=\"mm\" oninput=\"this.className = ''\" name=\"nn\"></p>\n");
      out.write("    <p><input placeholder=\"yyyy\" oninput=\"this.className = ''\" name=\"yyyy\"></p>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"tab\">Login Info:\n");
      out.write("    <p><input placeholder=\"Username...\" oninput=\"this.className = ''\" name=\"uname\"></p>\n");
      out.write("    <p><input placeholder=\"Password...\" oninput=\"this.className = ''\" name=\"pword\" type=\"password\"></p>\n");
      out.write("  </div>\n");
      out.write("  <div style=\"overflow:auto;\">\n");
      out.write("    <div style=\"float:right;\">\n");
      out.write("      <button type=\"button\" id=\"prevBtn\" onclick=\"nextPrev(-1)\">Previous</button>\n");
      out.write("      <button type=\"button\" id=\"nextBtn\" onclick=\"nextPrev(1)\">Next</button>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("  <!-- Circles which indicates the steps of the form: -->\n");
      out.write("  <div style=\"text-align:center;margin-top:40px;\">\n");
      out.write("    <span class=\"step\"></span>\n");
      out.write("    <span class=\"step\"></span>\n");
      out.write("    <span class=\"step\"></span>\n");
      out.write("    <span class=\"step\"></span>\n");
      out.write("  </div>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var currentTab = 0; // Current tab is set to be the first tab (0)\n");
      out.write("showTab(currentTab); // Display the current tab\n");
      out.write("\n");
      out.write("function showTab(n) {\n");
      out.write("  // This function will display the specified tab of the form...\n");
      out.write("  var x = document.getElementsByClassName(\"tab\");\n");
      out.write("  x[n].style.display = \"block\";\n");
      out.write("  //... and fix the Previous/Next buttons:\n");
      out.write("  if (n == 0) {\n");
      out.write("    document.getElementById(\"prevBtn\").style.display = \"none\";\n");
      out.write("  } else {\n");
      out.write("    document.getElementById(\"prevBtn\").style.display = \"inline\";\n");
      out.write("  }\n");
      out.write("  if (n == (x.length - 1)) {\n");
      out.write("    document.getElementById(\"nextBtn\").innerHTML = \"Submit\";\n");
      out.write("  } else {\n");
      out.write("    document.getElementById(\"nextBtn\").innerHTML = \"Next\";\n");
      out.write("  }\n");
      out.write("  //... and run a function that will display the correct step indicator:\n");
      out.write("  fixStepIndicator(n)\n");
      out.write("}\n");
      out.write("\n");
      out.write("function nextPrev(n) {\n");
      out.write("  // This function will figure out which tab to display\n");
      out.write("  var x = document.getElementsByClassName(\"tab\");\n");
      out.write("  // Exit the function if any field in the current tab is invalid:\n");
      out.write("  if (n == 1 && !validateForm()) return false;\n");
      out.write("  // Hide the current tab:\n");
      out.write("  x[currentTab].style.display = \"none\";\n");
      out.write("  // Increase or decrease the current tab by 1:\n");
      out.write("  currentTab = currentTab + n;\n");
      out.write("  // if you have reached the end of the form...\n");
      out.write("  if (currentTab >= x.length) {\n");
      out.write("    // ... the form gets submitted:\n");
      out.write("    document.getElementById(\"regForm\").submit();\n");
      out.write("    return false;\n");
      out.write("  }\n");
      out.write("  // Otherwise, display the correct tab:\n");
      out.write("  showTab(currentTab);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function validateForm() {\n");
      out.write("  // This function deals with validation of the form fields\n");
      out.write("  var x, y, i, valid = true;\n");
      out.write("  x = document.getElementsByClassName(\"tab\");\n");
      out.write("  y = x[currentTab].getElementsByTagName(\"input\");\n");
      out.write("  // A loop that checks every input field in the current tab:\n");
      out.write("  for (i = 0; i < y.length; i++) {\n");
      out.write("    // If a field is empty...\n");
      out.write("    if (y[i].value == \"\") {\n");
      out.write("      // add an \"invalid\" class to the field:\n");
      out.write("      y[i].className += \" invalid\";\n");
      out.write("      // and set the current valid status to false\n");
      out.write("      valid = false;\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("  // If the valid status is true, mark the step as finished and valid:\n");
      out.write("  if (valid) {\n");
      out.write("    document.getElementsByClassName(\"step\")[currentTab].className += \" finish\";\n");
      out.write("  }\n");
      out.write("  return valid; // return the valid status\n");
      out.write("}\n");
      out.write("\n");
      out.write("function fixStepIndicator(n) {\n");
      out.write("  // This function removes the \"active\" class of all steps...\n");
      out.write("  var i, x = document.getElementsByClassName(\"step\");\n");
      out.write("  for (i = 0; i < x.length; i++) {\n");
      out.write("    x[i].className = x[i].className.replace(\" active\", \"\");\n");
      out.write("  }\n");
      out.write("  //... and adds the \"active\" class on the current step:\n");
      out.write("  x[n].className += \" active\";\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
